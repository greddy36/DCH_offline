#!/usr/bin/env python

from ROOT import *
import numpy as np

mass = [700., 800, 900, 1000, 1200, 1300, 1400, 1500, 1600, 1700, 1800, 1900, 2000, 2200, 2300, 2400]
xsec = [5.820,3.860,2.720,1.950,0.982,0.716,0.540,0.408,0.305,0.230,0.174,0.136,0.102,0.0608,0.0473,0.0370]

#mass = [900, 1000, 1200, 1300, 1400, 1500, 1600, 1700, 1800, 1900, 2000, 2200, 2300, 2400]
#xsec = [2.720,1.950,0.982,0.716,0.540,0.408,0.305,0.230,0.174,0.136,0.102,0.0608,0.0473,0.0370]



c1 = 0.25
xsec1 = [x*c1*c1 for x in xsec]
tg1 = TGraph(len(mass), np.array(mass), np.array(xsec1))
tg1.SetLineColor(4)
tg1.SetMarkerColor(4)
tg1.SetMarkerStyle(7)
tg1.SetLineWidth(3)
tg1.SetLineStyle(9)

c2= 0.2
xsec2 = [x*c2*c2 for x in xsec]
tg2 = TGraph(len(mass), np.array(mass), np.array(xsec2))
tg2.SetLineColor(6)
tg2.SetMarkerColor(6)
tg2.SetMarkerStyle(7)
tg2.SetLineWidth(3)
tg2.SetLineStyle(7)


c3= 0.15
xsec3 = [x*c3*c3 for x in xsec]
tg3 = TGraph(len(mass), np.array(mass), np.array(xsec3))
tg3.SetLineColor(2)
tg3.SetMarkerColor(2)
tg3.SetMarkerStyle(7)
tg3.SetLineWidth(3)
tg3.SetLineStyle(5)


prevL = [2.03, 1.20, 0.54, 0.26, 0.18, 0.16, 0.13, 0.11, 0.10, 0.10, 0.11] 
tgp = TGraph(len(prevL), np.array(mass), np.array(prevL))
tgp.SetLineWidth(3)


# observed cross sections:
obs = [0.3095,0.1690,0.0587,0.0435,0.0300,0.0126,0.0096,0.0114,0.0144,0.0121,0.0076,0.0050,0.0033,0.0033,0.0037,0.0033,0.0033]
obsg = TGraph(len(mass), np.array(mass), np.array(obs))	
obsg.SetMarkerColor(1)
obsg.SetMarkerStyle(7)
obsg.SetLineWidth(4)


#exp_bands = np.array([
#    # mass, exp nom, exp -2sigma, exp +2sigma, exp -1sigma, exp +1sigma
#       [700,    0.32002,    0.16255,    0.96517,   0.22372,   0.50131],
#       [800,   0.086062,   0.044439,    0.18505,  0.058767,    0.12837],
#       [900,   0.033765,   0.018335,   0.068624,  0.024516,  0.050106],
#      [1000,   0.018225,   0.010069,    0.03665,  0.013294,   0.026459],
#      [1200,   0.010834,  0.0058431,   0.022225, 0.0078685,   0.015513],
#      [1300,  0.0093638,  0.0052101,   0.019169, 0.0067887,   0.013366],
#      [1400,  0.0086676,  0.0045721,   0.017482,  0.006256,   0.012412],
#      [1500,   0.009245,  0.0043738,   0.018225, 0.0063353,   0.013391],
#      [1600,   0.008098,  0.0041899,   0.016072, 0.0057823,   0.011553],
#      [1700,  0.0076368,   0.003817,   0.016055, 0.0052963,   0.011171],
#      [1800,  0.0064965,  0.0033825,   0.013481, 0.0044466,  0.0094618],
#      [1900,  0.0057771,  0.0030034,   0.012984, 0.0040732,  0.0083951],
#      [2000,  0.0056222,  0.0028666,   0.012528,  0.003884,  0.0081011],
#      [2200,  0.0054694,  0.0029547,   0.011195, 0.0039702,  0.0078403],
#      [2300,  0.0055446,  0.0028015,   0.011662, 0.0038231,  0.0081761],
#      [2400,  0.0052054,  0.0027153,   0.011816, 0.0037117,  0.0077839]])


"""
#asymptotic (ran with defaulr --rAbsAcc option, which make limit differ by 0.0005
# before OR changes..
exp_bands = np.array([
    # mass, exp nom, exp -2sigma, exp +2sigma, exp -1sigma, exp +1sigma
       [700,    0.2607,    0.1355,    0.5263,   0.1834,   0.3792],
       [800,   0.1050,   0.0574,    0.1967,  0.0764,    0.1460],
       [900,   0.0454,   0.0245,   0.0887,  0.0327,  0.0650],
      [1000,   0.0249,   0.0136,    0.0491,  0.0182,   0.0356],
      [1200,   0.0142,  0.0075,   0.0269, 0.0096,   0.0200],
      [1300,  0.0112,  0.0060,   0.0224, 0.0083,   0.0166],
      [1400,  0.0093,  0.0049,   0.0187,  0.0068,   0.0137],
      [1500,   0.0083,  0.0044,   0.0167, 0.0059,   0.0123],
      [1600,   0.0078,  0.0044,   0.0148, 0.0057,   0.0113],
      [1700,  0.0073,   0.0041,   0.0139, 0.0053,   0.0106],
      [1800,  0.0063,  0.0036,   0.0127, 0.0046,  0.0092],
      [1900,  0.0063,  0.0028,   0.0114, 0.0041,  0.0084],
      [2000,  0.0054,  0.0030,   0.0107,  0.0039,  0.0078],
      [2200,  0.0044,  0.0025,   0.0094, 0.0030,  0.0064],
      [2300,  0.0044,  0.0019,   0.0085, 0.0028,  0.0064],
      [2400,  0.0034,  0.0021,   0.0083, 0.0025,  0.0056]])


#asymptotic: before oR with --rAbsAcc=0.0000001 precision
exp_bands = np.array([
    # mass, exp nom, exp -2sigma, exp +2sigma, exp -1sigma, exp +1sigma
       [700,    0.2607,    0.1355,    0.5263,   0.1834,   0.3792],
       [800,   0.1050,   0.0574,    0.1967,  0.0764,    0.1460],
       [900,   0.0458,   0.0243,   0.0884,  0.0325,  0.0649],
      [1000,   0.0253,   0.0134,    0.0488,  0.0181,   0.0358],
      [1200,   0.0139,  0.0073,   0.0268, 0.0098,   0.0197],
      [1300,  0.0116,  0.0062,   0.0225, 0.0083,   0.0165],
      [1400,  0.0097,  0.0051,   0.0188,  0.0069,   0.0137],
      [1500,   0.0088,  0.0047,   0.0170, 0.0062,   0.0124],
      [1600,   0.0078,  0.0042,   0.0152, 0.0056,   0.0111],
      [1700,  0.0072,   0.0038,   0.0140, 0.0051,   0.0102],
      [1800,  0.0064,  0.0034,   0.0126, 0.0046,  0.0092],
      [1900,  0.0059,  0.0031,   0.0116, 0.0042,  0.0084],
      [2000,  0.0054,  0.0028,   0.0107,  0.0038,  0.0077],
      [2200,  0.0045,  0.0024,   0.0092, 0.0032,  0.0066],
      [2300,  0.0042,  0.0022,   0.0087, 0.0029,  0.0062],
      [2400,  0.0039,  0.0020,   0.0082, 0.0027,  0.0057]])




#asymptotic: after OR with --rAbsAcc=0.0000001 precision
exp_bands = np.array([
    # mass, exp nom, exp -2sigma, exp +2sigma, exp -1sigma, exp +1sigma
       [700,    0.3506,    0.1821,    0.6943,   0.2466,   0.5029],
       [800,   0.1504,   0.0787,    0.2859,  0.1062,    0.2121],
       [900,   0.0605,   0.0322,   0.1151,  0.0433,  0.0854],
      [1000,   0.0303,   0.0161,    0.0577,  0.0216,   0.0427],
      [1200,   0.0157,  0.0083,   0.0304, 0.0111,   0.0224],
      [1300,  0.0126,  0.0066,   0.0247, 0.0089,   0.0180],
      [1400,  0.0102,  0.0054,   0.0199,  0.0072,   0.0146],
      [1500,   0.0091,  0.0048,   0.0176, 0.0064,   0.0129],
      [1600,   0.0078,  0.0041,   0.0153, 0.0056,   0.0112],
      [1700,  0.0072,   0.0038,   0.0140, 0.0051,   0.0102],
      [1800,  0.0064,  0.0034,   0.0125, 0.0046,  0.0092],
      [1900,  0.0061,  0.0032,   0.0117, 0.0043,  0.0086],
      [2000,  0.0056,  0.0030,   0.0109,  0.0040,  0.0080],
      [2100,  0.0052,  0.0027,   0.0101,  0.0037,  0.0074],
      [2200,  0.0047,  0.0025,   0.0093, 0.0034,  0.0068],
      [2300,  0.0043,  0.0023,   0.0086, 0.0030,  0.0062],
      [2400,  0.0039,  0.0020,   0.0078, 0.0027,  0.0056]])



#asymptotic: after OR with --rAbsAcc=0.0000001 precision
# include Ele and Mu unc + pdf + de-correlated JES/JER and hf/lf
exp_bands = np.array([
    # mass, exp nom, exp -2sigma, exp +2sigma, exp -1sigma, exp +1sigma
       [700,    0.3516,    0.1840,    0.6899,   0.2482,   0.5015],
       [800,   0.1523,   0.0803,    0.2886,  0.1079,    0.2149],
       [900,   0.0618,   0.0333,   0.1171,  0.0444,  0.0866],
      [1000,   0.0311,   0.0167,    0.0592,  0.0223,   0.0439],
      [1200,   0.0170,  0.0091,   0.0321, 0.0121,   0.0239],
      [1300,  0.0138,  0.0073,   0.0263, 0.0099,   0.0195],
      [1400,  0.0114,  0.0061,   0.0216,  0.0081,   0.0160],
      [1500,   0.0100,  0.0054,   0.0191, 0.0072,   0.0141],
      [1600,   0.0086,  0.0046,   0.0164, 0.0061,   0.0121],
      [1700,  0.0079,   0.0042,   0.0149, 0.0056,   0.0111],
      [1800,  0.0069,  0.0035,   0.0133, 0.0049,  0.0098],
      [1900,  0.0064,  0.0034,   0.0123, 0.0046,  0.0091],
      [2000,  0.0059,  0.0031,   0.0113,  0.0042,  0.0083],
      [2100,  0.0054,  0.0029,   0.0104,  0.0039,  0.0077],
      [2200,  0.0049,  0.0026,   0.0095, 0.0035,  0.0069],
      [2300,  0.0045,  0.0023,   0.0087, 0.0032,  0.0064],
      [2400,  0.0040,  0.0021,   0.0079, 0.0028,  0.0058]])


# using January templates, no fitAsimov
#combine -M AsymptoticLimits -d HC-shape-5par-an50-2023.txt -m 1200 --rAbsAcc=0.0001 --noFitAsimov
#asymptotic: after OR with --rAbsAcc=0.0000001 precision, 
# include Ele and Mu unc + pdf + de-correlated JES/JER and hf/lf
exp_bands = np.array([
    # mass, exp nom, exp -2sigma, exp +2sigma, exp -1sigma, exp +1sigma
       [700,    0.3516,    0.1840,    0.6899,   0.2482,   0.5015],
       [800,   0.1523,   0.0803,    0.2886,  0.1079,    0.2149],
       [900,   0.0618,   0.0333,   0.1171,  0.0444,  0.0866],
      [1000,   0.0311,   0.0167,    0.0592,  0.0223,   0.0439],
    
      [1200,   0.0151,  0.0079,   0.0294, 0.0106,   0.0215],
    
      [1300,  0.0138,  0.0073,   0.0263, 0.0099,   0.0195],
      [1400,  0.0114,  0.0061,   0.0216,  0.0081,   0.0160],
      [1500,   0.0100,  0.0054,   0.0191, 0.0072,   0.0141],
      [1600,   0.0086,  0.0046,   0.0164, 0.0061,   0.0121],
      [1700,  0.0079,   0.0042,   0.0149, 0.0056,   0.0111],
      [1800,  0.0069,  0.0035,   0.0133, 0.0049,  0.0098],
      [1900,  0.0064,  0.0034,   0.0123, 0.0046,  0.0091],
      [2000,  0.0059,  0.0031,   0.0113,  0.0042,  0.0083],
      [2100,  0.0054,  0.0029,   0.0104,  0.0039,  0.0077],
      [2200,  0.0049,  0.0026,   0.0095, 0.0035,  0.0069],
      [2300,  0.0045,  0.0023,   0.0087, 0.0032,  0.0064],
      [2400,  0.0040,  0.0021,   0.0079, 0.0028,  0.0058]])

"""

# using January templates, no fitAsimov, 
#combine -M AsymptoticLimits -d HC-shape-5par-an50-2023-reduced-scaleW.txt -m 1200 --rAbsAcc=0.0001 --noFitAsimov
#asymptotic: after OR with --rAbsAcc=0.0000001 precision, 
# include Ele and Mu unc + pdf + de-correlated JES/JER and hf/lf
#exp_bands = np.array([
#    # mass, exp nom, exp -2sigma, exp +2sigma, exp -1sigma, exp +1sigma
#       [700,    0.3027,    0.1490,    0.6437,   0.2067,   0.4512],
#       [800,   0.1289,   0.0665,    0.2579,  0.0899,    0.1865],
#    
#      [900,   0.0525,   0.0271,   0.1042,  0.0368,  0.0757], 
#      [1000,   0.0275,   0.0146,    0.0535,  0.0195,   0.0391],
#      [1200,   0.0157,  0.0082,   0.0307, 0.0111,   0.0224],
#      [1300,  0.0131,  0.0068,   0.0259, 0.0093,   0.0187],
#      [1400,  0.0108,  0.0057,   0.0214,  0.0077,   0.0155],
#      [1500,   0.0098,  0.0051,   0.0196, 0.0070,   0.0141],
#      [1600,   0.0086,  0.0045,   0.0172, 0.0061,   0.0124],
#      [1700,  0.0080,   0.0042,   0.0160, 0.0057,   0.0115],
#      [1800,  0.0073,  0.0038,   0.0143, 0.0051,  0.0103],
#      [1900,  0.0067,  0.0035,   0.0129, 0.0048,  0.0095],
#      [2000,  0.0062,  0.0033,   0.0119,  0.0044,  0.0087], 
#      [2100,  0.0057,  0.0030,   0.0109,  0.0041,  0.0079],
#      [2200,  0.0051,  0.0028,   0.0099, 0.0036,  0.0072],   
#      [2300,  0.0047,  0.0024,   0.0090, 0.0033,  0.0066],  
#      [2400,  0.0042,  0.0022,   0.0083, 0.0030,  0.0060]])


#HC-shape-5par-an50-2023-PAA.txt, Asymptotic, uncorrelated pdf uncertainties, added shape pdf and scale uncetainties
#exp_bands = np.array([
#    # mass, exp nom, exp -2sigma, exp +2sigma, exp -1sigma, exp +1sigma
#      [700,    0.2979,    0.1478,    0.6196,   0.2040,   0.4391],
#      [800,   0.1265,   0.0662,    0.2492,  0.0893,    0.1819],
#      [900,   0.0525,   0.0273,   0.1033,  0.0369,  0.0753],
#      [1000,   0.0276,   0.0145,    0.0533,  0.0195,   0.0391],
#      [1200,   0.0157,  0.0083,   0.0301, 0.0111,   0.0223],
#      [1300,  0.0129,  0.0068,   0.0252, 0.0092,   0.0185],
#      [1400,  0.0107,  0.0057,   0.0209,  0.0076,   0.0153],
#      [1500,   0.0097,  0.0051,   0.0190, 0.0069,   0.0138],
#      [1600,   0.0085,  0.0045,   0.0166, 0.0061,   0.0122],
#      [1700,  0.0079,   0.0042,   0.0153, 0.0056,   0.0112],
#      [1800,  0.0071,  0.0037,   0.0138, 0.0051,  0.0100],
#      [1900,  0.0067,  0.0035,   0.0129, 0.0048,  0.0095],
#      [2000,  0.0062,  0.0033,   0.0119,  0.0044,  0.0086],
#      [2100,  0.0057,  0.0030,   0.0108,  0.0040,  0.0079],  
#      [2200,  0.0051,  0.0027,   0.0098, 0.0037,  0.0072],
#      [2300,  0.0046,  0.0025,   0.0090, 0.0033,  0.0065],  
#      [2400,  0.0042,  0.0022,   0.0081, 0.0030,  0.0059]])



#HC-TopTagVeto_Syst.txt, Asymptotic, uncorrelated pdf uncertainties, added shape pdf and scale uncetainties for SM backgrouns
exp_bands = np.array([
    # mass, exp nom, exp -2sigma, exp +2sigma, exp -1sigma, exp +1sigma
      [700,    0.3047,    0.1512,    0.6427,   0.2087,   0.4516],
      [800,   0.1138,   0.0591,    0.2300,  0.0800,    0.1650],
      [900,   0.0564,   0.0295,   0.1098,  0.0398,  0.0802],
      [1000,   0.0256,   0.0134,    0.0504,  0.0181,   0.0368],
      [1200,   0.0132,  0.0070, 0.0253,   0.0094, 0.0187],
      [1300,  0.0106,  0.0055, 0.0206,   0.0075, 0.0150],
      [1400,  0.0090,  0.0047,   0.0175, 0.0064,  0.0128],   
      [1500,   0.0085,  0.0044,   0.0166, 0.0060, 0.0121],
      [1600,   0.0076,  0.0039,   0.0150, 0.0054, 0.0109],
      [1700,  0.0070,   0.0037,   0.0139, 0.0050, 0.0101],
      [1800,  0.0062,  0.0033,   0.0122, 0.0044, 0.0088], 
      [1900,  0.0058,  0.0030,   0.0113, 0.0041, 0.0083],    
      [2000,  0.0053,  0.0027,   0.0103, 0.0038,  0.0075],
      [2100,  0.0049,  0.0025,   0.0095, 0.0035,  0.0069 ], 
      [2200,  0.0044,  0.0023,   0.0086, 0.0032, 0.0063  ],    
      [2300,  0.0040,  0.0021,   0.0078, 0.0029, 0.0057],
    
      [2400,  0.0036,  0.0019,   0.0072, 0.0026,  0.0052]])


exp = exp_bands[:,1] #exp_xsec[]
expg = TGraph(len(mass), np.array(mass), np.array(exp))
expg.SetLineWidth(3)
expg.SetLineStyle(2)

mass2 = exp_bands[:,0]
mass2r = np.flip(mass2)
massL = np.append(mass2, mass2r)

exp1sigmaH = exp_bands[:,5]
exp1sigmaL = np.flip(exp_bands[:,4])
exp1sigma = np.append(exp1sigmaH,exp1sigmaL)

exp2sigmaH = exp_bands[:,3]
exp2sigmaL = np.flip(exp_bands[:,2])
exp2sigma = np.append(exp2sigmaH,exp2sigmaL)

exp1g = TGraph(len(massL),massL,exp1sigma)
exp1g.SetFillColor(3)
exp2g = TGraph(len(massL),massL,exp2sigma)
exp2g.SetFillColor(5)

xaxis = exp2g.GetXaxis()
xaxis.SetTitle("VLQ Mass (GeV)")
xaxis.SetTitleSize(0.045)
xaxis.SetLimits(mass[0]-1,mass[-1]+1)

yaxis = exp2g.GetYaxis()
yaxis.SetTitle("Cross Section  #times B(bW) [pb]")
yaxis.SetTitleSize(0.045)
yaxis.SetRangeUser(0.0005,0.5)
	
exp2g.SetTitle("")
exp2g.Draw("AF")
exp1g.Draw("F")
expg.Draw("LP")
#obsg.Draw("LP")
tg1.Draw("LP")
tg2.Draw("LP")
tg3.Draw("LP")
tgp.Draw("L")

tex1 = TLatex(0.16,0.92,"CMS Work in Progress")
tex1.SetNDC()
tex1.SetTextFont(42)
tex1.SetTextSize(0.05)
tex1.SetLineWidth(2)
tex1.Draw()

tex2 = TLatex(0.67,0.92,"138 fb^{-1} (13 TeV)")
tex2.SetNDC()
tex2.SetTextFont(42)
tex2.SetLineWidth(2)
tex2.Draw()
	
gPad.RedrawAxis()

leg = TLegend(0.65,0.65,0.895,0.89)
leg.AddEntry(expg,"Median expected limit","pl")
leg.AddEntry(exp1g,"68% expected limit","f")
leg.AddEntry(exp2g,"95% expected limit","f")
leg.AddEntry(tg1,"Ybq prod. (c^{bW} = 0.25)","pl")
leg.AddEntry(tg2,"Ybq prod. (c^{bW} = 0.2)","pl")
leg.AddEntry(tg3,"Ybq prod. (c^{bW} = 0.15)","pl")
leg.AddEntry(tgp,"CMS limit, PLB(2017) B 772","pl")
leg.SetBorderSize(0)
leg.Draw()

pt = TPaveText(0.3073066,0.9189474,0.6926934,0.9673684,"blNDC")
pt.SetName("title")
pt.SetBorderSize(0)
pt.SetFillColor(10)
pt.SetFillStyle(0)
pt.SetTextFont(42)
AText = pt.AddText("CMS Preliminary, 138 fb^{-1} (13 TeV)")
pt.Draw()

gPad.SetLogy()


